Hello!
Variables: 
For creating varible you need to declare : register dataType value
Register can be named as register and number ( as example register1) or hexadecimal( 0x000A).
DataType can be int or char( later will be implemented more dataTypes)) ( value can be string or
integer( later will be added more variants like true or false, imaginary numbers, numbers with floating point ext.))

Functions: 
For printing in console: write register
For getting input from user: read dataType register
(as example register1) or hexadecimal( 0x000A)) ( you don't need to worry about dataType in write function)(datatype same as variable declaration types)
If, while, for: 
For if, while and for and for you can use ==, !=,>,<,>=,<=( == compare if arguments are equal, != compare if arguments are not equal, > and < as in mathematics compare first with second argument, >= and <= compare if first or second arguments is greater or euqal)

Arrays: 
For declaring array you need write : dataType name[variableAmountLimit]= var, var, var
(dataTypa can ba int or char( later will be other types), name can be any string, variableAmountLimit is variable amount limit :), var can be any value or variable) (if array is char array you need to also decalare all array string character limit as in c)

Sections: 
Sections as in assembly allows you to declare different variables. On another hand, functions replace assembly section.text.
For creating section for variables you need to declare: section .data

Functions:

For creating function you need to declare: returnType name
(returnType as dataType for variables)( name can be any char[] (string) )
for return you need to declare: return value
(value  can be integer or char variable, integer or char)

For save line for later using you need to write in the end of the line character 's'.

For executing saved line you need to declare: save savedLineindex + 's'
(as example: save 1s)







